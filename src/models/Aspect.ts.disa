import * as nodeFs from 'node:fs';

interface Aspect {
    _aspect: string;
}

interface FileSystemEntry extends Aspect {
    _aspect: 'FileSystemEntry';
    path: string;
    stats: nodeFs.Stats;
}


interface File extends Aspect {
    _aspect: 'File';
    hash?: string;
}

interface Directory extends Aspect {
    _aspect: 'Directory';
}

interface Load<TRecord = any> {
    load: (record: TRecord) => this;
}

interface Save<TRecord = any> {
    save: () => TRecord;
}

interface Filter<T> {/* TODO */}

interface Cursor<T> {/* TODO */}

interface Watch<TRecord = any> {
    watch(filter: Filter<TRecord>): Cursor<TRecord>;
}